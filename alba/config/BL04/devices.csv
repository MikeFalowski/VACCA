server	class	device	property	value
AlbaPLC/BL04_CT_EPS	AlbaPLC	bl04/ct/eps-plc-01	ModbusTimeWait	200
			Retries	3
			UseEvents	yes
			_Requires	BL04/CT/EPS-PLC-01-MBUS
			Offsets	
			DynamicAttributes	#Alberto, arubio@cells.es BL04 MSPD, Equipment Protection System
				#Main Lists to be accessed from the PLC
				
				#Individual Attributes
				PLC_CONFIG_Status=DevString(READ and Denary2Binary(DigitalsREAD[0]) or WRITE and WriteInt(1,Binary2Denary(VALUE)))
				
				PLC_CONFIG_RESET = (WRITE and WriteFlag(1,0,VALUE))
				
				PLC_SR_WARN = Bit(DigitalsREAD[0],3)
				PLC_CONFIG_WARN = Bit(DigitalsREAD[0],4)
				PLC_CONFIG_ALRM = Bit(DigitalsREAD[0],2)
				
				# CONTROL FRONT END
				fe_close_first_valve=Bit(DigitalsREAD[52],1)
				fe_control_disabled=Bit(DigitalsREAD[53],1)
				fe_interlock=Bit(DigitalsREAD[51],1)
				fe_open=Bit(DigitalsREAD[50],1)
				BL_READY=Bit(DigitalsREAD[54],0)
				OPEN_FE = DevBoolean(READ and Bit(DigitalsREAD[0],5) or WRITE and WriteFlag(1,5,VALUE))
				CLOSE_FE = DevBoolean(READ and Bit(DigitalsREAD[0],6) or WRITE and WriteFlag(1,6,VALUE))
				RESET_FE = DevBoolean(READ and Bit(DigitalsREAD[0],7) or WRITE and WriteFlag(1,7,VALUE))
				
				#MSPD ALARMS
				EMPB=Bit(DigitalsREAD[58],1)
				FDCU=Bit(DigitalsREAD[59],1)
				PSU_AIR=Bit(DigitalsREAD[62],1)
				WSEN_EH=Bit(DigitalsREAD[61],1)
				WSEN_OH=Bit(DigitalsREAD[60],1)
				
				#COOLING ALARM
				FSW_OH_01=Bit(DigitalsREAD[67],1)
				FSW_OH_02=Bit(DigitalsREAD[68],1)
				FSW_OH_03=Bit(DigitalsREAD[69],1)
				FSW_OH_04=Bit(DigitalsREAD[70],1)
				FSW_OH_05=Bit(DigitalsREAD[71],1)
				FSW_OH_06=Bit(DigitalsREAD[72],1)
				FSW_OH_07=Bit(DigitalsREAD[73],1)
				FSW_OH_08=Bit(DigitalsREAD[74],1)
				FSW_OH_09=Bit(DigitalsREAD[75],1)
				FSW_OH_10=Bit(DigitalsREAD[76],1)
				MOVM_FLW1=Bit(DigitalsREAD[65],1)
				MOVM_FLW2=Bit(DigitalsREAD[66],1)
				#COOLING VALVES
				WAS_X01_01_EV1=DevBoolean(READ and Bit(DigitalsREAD[167],5) or WRITE and WriteFlag(507,5,(VALUE)))
				WAS_X01_01_EV2=DevBoolean(READ and Bit(DigitalsREAD[168],5) or WRITE and WriteFlag(508,5,(VALUE)))
				WAS_X01_02_EV1=DevBoolean(READ and Bit(DigitalsREAD[169],5) or WRITE and WriteFlag(509,5,(VALUE)))
				WAS_X01_02_EV2=DevBoolean(READ and Bit(DigitalsREAD[170],5) or WRITE and WriteFlag(510,5,(VALUE)))
				#COOLING
				FM_OH01_11_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[1:1+2]])
				FM_OH01_12_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[4:4+2]])
				WAS_X01_01_PS1_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[46:46+2]])
				WAS_X01_01_PS2_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[49:49+2]])
				WAS_X01_02_PS1_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[52:52+2]])
				WAS_X01_02_PS2_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[55:55+2]])
				
				#AIR SUPPLY
				PAAS_X01_01_PS1_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[58:58+2]])
				PAAS_X01_01_PS2_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[61:61+2]])
				#AIR SUPPLY VALVES
				PAAS_X01_01_EV=DevBoolean(READ and Bit(DigitalsREAD[171],5) or WRITE and WriteFlag(511,5,(VALUE)))
				
				#MSPD MIRROR 1 LIMIT SWITCHES 
				MIR_OH01_01_PITCH_NEG=Bit(DigitalsREAD[78],1)
				MIR_OH01_01_PITCH_POS=Bit(DigitalsREAD[79],1)
				MIR_OH01_01_ROLL_NEG=Bit(DigitalsREAD[80],1)
				MIR_OH01_01_ROLL_POS=Bit(DigitalsREAD[81],1)
				MIR_OH01_01_YAW_NEG=Bit(DigitalsREAD[82],1)
				MIR_OH01_01_YAW_POS=Bit(DigitalsREAD[83],1)
				
				#MSPD ICEPAP INTERLOCKS
				Ipap_Itlk_01=Bit(DigitalsREAD[173],1)
				Ipap_Ena_01=DevBoolean(READ and Bit(DigitalsREAD[172],1) or WRITE and WriteFlag(512,1,VALUE))
				IPAP_RKX04A02_01=DevBoolean(READ and Bit(DigitalsREAD[84],5) or WRITE and WriteFlag(424,5,(VALUE)))
				
				#WBAT
				OP_WBAT1_STATUS=DevString(Bit(DigitalsREAD[140],0) and 'ERROR' or Bit(DigitalsREAD[140],10) and 'MOVING/UNKNOWN' or Bit(DigitalsREAD[140],9) and 'CANNOT_MOVE' or 'OK')
				OP_WBAT1=CUSTOM(READ and [Bit(DigitalsREAD[140],x) for x in (4,3,2,1)].index(1) or WRITE and WriteFlag(480,[8,7,6,5][VALUE],1))
				OP_WBAT2_STATUS=DevString(Bit(DigitalsREAD[149],0) and 'ERROR' or Bit(DigitalsREAD[149],10) and 'MOVING/UNKNOWN' or Bit(DigitalsREAD[149],9) and 'CANNOT_MOVE' or 'OK')
				OP_WBAT2=CUSTOM(READ and [Bit(DigitalsREAD[149],x) for x in (4,3,2,1)].index(1) or WRITE and WriteFlag(489,[8,7,6,5][VALUE],1))
				OP_WBAT3_STATUS=DevString(Bit(DigitalsREAD[158],0) and 'ERROR' or Bit(DigitalsREAD[158],10) and 'MOVING/UNKNOWN' or Bit(DigitalsREAD[158],9) and 'CANNOT_MOVE' or 'OK')
				OP_WBAT3=CUSTOM(READ and [Bit(DigitalsREAD[158],x) for x in (4,3,2,1)].index(1) or WRITE and WriteFlag(498,[8,7,6,5][VALUE],1))
				
				#RGA
				MIR_RGA=DevBoolean(READ and Bit(DigitalsREAD[77],5) or WRITE and WriteFlag(417,5,(VALUE)))
				
				#COLD CATHODE
				CCG_BLVS_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[43:43+2]])
				CCG_FILT_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[13:13+2]])
				CCG_MIR_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[25:25+2]])
				CCG_MONO_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[31:31+2]])
				CCG_PSHU_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[37:37+2]])
				CCG_TRU_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[7:7+2]])
				CCG_WBAT_AF=IeeeFloat([int(a) for a in AnalogRealsREAD[19:19+2]])
				
				#ION PUMP
				IP_BLVS_DI=Bit(DigitalsREAD[93],1)
				IP_FLIT_DI=Bit(DigitalsREAD[87],1)
				IP_FS_DI=Bit(DigitalsREAD[95],1)
				IP_MIR_OH01_DI=Bit(DigitalsREAD[91],1)
				IP_MIR_OH02_DI=Bit(DigitalsREAD[99],1)
				IP_MONO_DI=Bit(DigitalsREAD[97],1)
				IP_PSHU_DI=Bit(DigitalsREAD[101],1)
				IP_TRU_DI=Bit(DigitalsREAD[85],1)
				IP_WBAT_DI=Bit(DigitalsREAD[89],1)
				IP_BLVS_DO=DevBoolean(READ and Bit(DigitalsREAD[94],5) or WRITE and WriteFlag(434,5,(VALUE)))
				IP_FLIT_DO=DevBoolean(READ and Bit(DigitalsREAD[88],5) or WRITE and WriteFlag(428,5,(VALUE)))
				IP_FS_DI=DevBoolean(READ and Bit(DigitalsREAD[96],5) or WRITE and WriteFlag(436,5,(VALUE)))
				IP_MIR_OH01_DO=DevBoolean(READ and Bit(DigitalsREAD[92],5) or WRITE and WriteFlag(432,5,(VALUE)))
				IP_MIR_OH02_DO=DevBoolean(READ and Bit(DigitalsREAD[100],5) or WRITE and WriteFlag(440,5,(VALUE)))
				IP_MONO_DO=DevBoolean(READ and Bit(DigitalsREAD[98],5) or WRITE and WriteFlag(438,5,(VALUE)))
				IP_PSHU_DO=DevBoolean(READ and Bit(DigitalsREAD[102],5) or WRITE and WriteFlag(442,5,(VALUE)))
				IP_TRU_DO=DevBoolean(READ and Bit(DigitalsREAD[86],5) or WRITE and WriteFlag(426,5,(VALUE)))
				IP_WBAT_DO=DevBoolean(READ and Bit(DigitalsREAD[90],5) or WRITE and WriteFlag(430,5,(VALUE)))
				
				#VALVES
				TRU_VL=PNV(READ and DigitalsREAD[112] or WRITE and 452,VALUE)
				PNV_OH01_01=PNV(READ and DigitalsREAD[116] or WRITE and 456,VALUE)
				PNV_OH01_02=PNV(READ and DigitalsREAD[120] or WRITE and 460,VALUE)
				PNV_OH01_03=PNV(READ and DigitalsREAD[124] or WRITE and 464,VALUE)
				PNV_OH01_04=PNV(READ and DigitalsREAD[128] or WRITE and 468,VALUE)
				PNV_OH01_05=PNV(READ and DigitalsREAD[132] or WRITE and 472,VALUE)
				OP_MONO_VL=PNV(READ and DigitalsREAD[136] or WRITE and 476,VALUE)
				
				#SAFETY PHOTON SHUTTER
				PSHU_OH01=PNV(READ and DigitalsREAD[107] or WRITE and 447,VALUE)
				
				#FLUORESCENSE SCREEN
				FS_OH01=FS(READ and DigitalsREAD[103] or WRITE and 443,VALUE)
				
				#TEMPERATURE
				THERMOCOUPLES=DevVarDoubleArray([AnalogIntsREAD[i]/10.0 for i in range(1,102,2)])
				FLIT_OH01_TC1=float(AnalogIntsREAD[1]/10.0)
				FLIT_OH01_TC2=float(AnalogIntsREAD[3]/10.0)
				FLIT_OH01_TC3=float(AnalogIntsREAD[5]/10.0)
				VWIN_OH01_TC1=float(AnalogIntsREAD[7]/10.0)
				VWIN_OH01_TC2=float(AnalogIntsREAD[9]/10.0)
				WBAT_OH01_01_TC1=float(AnalogIntsREAD[11]/10.0)
				WBAT_OH01_01_TC2=float(AnalogIntsREAD[13]/10.0)
				WBAT_OH01_01_TC3=float(AnalogIntsREAD[15]/10.0)
				WBAT_OH01_01_TC4=float(AnalogIntsREAD[17]/10.0)
				WBAT_OH01_02_TC5=float(AnalogIntsREAD[19]/10.0)
				WBAT_OH01_02_TC6=float(AnalogIntsREAD[21]/10.0)
				WBAT_OH01_02_TC7=float(AnalogIntsREAD[23]/10.0)
				WBAT_OH01_02_TC8=float(AnalogIntsREAD[25]/10.0)
				WBAT_OH01_03_TC9=float(AnalogIntsREAD[27]/10.0)
				WBAT_OH01_03_TC10=float(AnalogIntsREAD[29]/10.0)
				WBAT_OH01_03_TC11=float(AnalogIntsREAD[31]/10.0)
				WBAT_OH01_03_TC12=float(AnalogIntsREAD[33]/10.0)
				MIR_OH01_01_PT01=float(AnalogIntsREAD[35]/10.0)
				MIR_OH01_01_PT02=float(AnalogIntsREAD[37]/10.0)
				MIR_OH01_01_PT03=float(AnalogIntsREAD[39]/10.0)
				MIR_OH01_01_PT04=float(AnalogIntsREAD[41]/10.0)
				MIR_OH01_01_PT05=float(AnalogIntsREAD[43]/10.0)
				MIR_OH01_01_PT06=float(AnalogIntsREAD[45]/10.0)
				MIR_OH01_01_TC=float(AnalogIntsREAD[47]/10.0)
				MOVM_OH01_01_TC1=float(AnalogIntsREAD[49]/10.0)
				MOVM_OH01_01_TC2=float(AnalogIntsREAD[51]/10.0)
				MOVM_OH01_01_TC3=float(AnalogIntsREAD[53]/10.0)
				MOVM_OH01_01_TC4=float(AnalogIntsREAD[55]/10.0)
				FS_OH01_01_PT1=float(AnalogIntsREAD[57]/10.0)
				FS_OH01_01_PT2=float(AnalogIntsREAD[59]/10.0)
				MONO_OH01_01_PT01=float(AnalogIntsREAD[61]/10.0)
				MONO_OH01_01_PT02=float(AnalogIntsREAD[63]/10.0)
				MONO_OH01_01_PT03=float(AnalogIntsREAD[65]/10.0)
				MONO_OH01_01_PT04=float(AnalogIntsREAD[67]/10.0)
				MONO_OH01_01_PT05=float(AnalogIntsREAD[69]/10.0)
				MONO_OH01_01_PT06=float(AnalogIntsREAD[71]/10.0)
				MONO_OH01_01_PT07=float(AnalogIntsREAD[73]/10.0)
				MONO_OH01_01_PT08=float(AnalogIntsREAD[75]/10.0)
				MONO_OH01_01_PT09=float(AnalogIntsREAD[77]/10.0)
				MONO_OH01_01_PT10=float(AnalogIntsREAD[79]/10.0)
				MONO_OH01_01_PT11=float(AnalogIntsREAD[81]/10.0)
				MONO_OH01_01_PT12=float(AnalogIntsREAD[83]/10.0)
				MONO_OH01_01_PT13=float(AnalogIntsREAD[85]/10.0)
				MONO_OH01_01_PT14=float(AnalogIntsREAD[87]/10.0)
				MONO_OH01_01_PT15=float(AnalogIntsREAD[89]/10.0)
				MONO_OH01_01_PT16=float(AnalogIntsREAD[91]/10.0)
				MONO_OH01_01_PT17=float(AnalogIntsREAD[93]/10.0)
				MONO_OH01_01_PT18=float(AnalogIntsREAD[95]/10.0)
				MONO_OH01_01_PT19=float(AnalogIntsREAD[97]/10.0)
				PT100_OH01_01_PT1=float(AnalogIntsREAD[99]/10.0)
				PT100_OH01_02_PT2=float(AnalogIntsREAD[101]/10.0)
			Mapping	DigitalsREAD=0,+280
				DigitalsWRITE=390,+280
				AnalogIntsREAD=835,+280
				AnalogIntsWRITE=1155,+320
				AnalogRealsREAD=2135,+300
				AnalogRealsWRITE=2455,+300
			_Location	BL04-CT-PLC-RKX04A05-01
			ForcePolling	3000
				DigitalsREAD
				AnalogIntsREAD
				AnalogRealsREAD
				PLC_CONFIG_Status
				POLL
				CPUStatus
			Modbus_name	BL04/CT/EPS-PLC-01-MBUS
			ModbusCacheConfig	0
Modbus	Modbus	#CLASS	cvs_tag	
Modbus/BL04_CT_EPS	Modbus	bl04/ct/eps-plc-01-mbus	_Location	BL04-CT-PLC-RKX04A05-01
			Protocol	TCP
			Serialline	TCP
			Mapping	DigitalsREAD:7000,7175
			SocketConnectionSleep	5000
			ModbusID	1
			TCPport	502
			TCPTimeout	3
			IpHost	84.89.224.29
PyStateComposer/BL04_VC	PyStateComposer	bl04/vc/all	KeepTime	200.0
			CheckDependencies	False
			DynamicAttributes	BLN=int(04)
				CCGAxxis=DevVarDoubleArray([0,2,4,5,6,7,8])
				CCGPressures=DevVarDoubleArray([XAttr(s) or 1e-12 for s in (['BL%02d/VC/VGCT-%02d/P%d'%(BLN,j,i) for j in (3,2,1) for i in (2,1)]+['FE%02d/VC/VGCT-01/P1'%(BLN)])])
				IPAxxis=DevVarDoubleArray(range(len(IPPressures)))
				IPPressures=DevVarDoubleArray([XAttr(s) or 1e-12 for s in (['BL%02d/VC/IPCT-%02d/P%d'%(BLN,j,i) for j in (4,3,2,1) for i in (2,1)]+['FE%02d/VC/IPCT-01/P1'%(BLN)])])
				MaxPressure=DevDouble(max(CCGPressures))
				ThermoAxxis=DevVarDoubleArray([ t*0.16  for t in range(len( XAttr('BL04/CT/EPS-PLC-01/THERMOCOUPLES') )) ])
				Thermocouples=DevVarDoubleArray([x if x<1000 else 0 for x in reversed(XAttr('BL04/CT/EPS-PLC-01/THERMOCOUPLES'))]) 
				AxxisLabels=DevVarStringArray(['PH','MONO','BLVS','MIRROR','WBATT','FILTER','FE',])
				AxxisPositions=DevVarLongArray([0,2,4,5,6,7,8])
			StatePolicy	EXTRACT,0
				ON,0
				OPEN,0
				STANDBY,0
				MOVING,8
				RUNNING,8
				CLOSE,10
				INSERT,10
				DISABLE,11
				OFF,11
				UNKNOWN,12
				ALARM,13
				INIT,13
				FAULT,14
			IgnoreList	 *RGA*
				*MBUS*
				*SERIAL*
			KeepAttributes	yes
			DevicesList	BL*/VC/IPCT-*
				BL*/VC/VGCT-*
				FE*/VC/IPCT*
				FE*/VC/VGCT*
				BL*/CT/EPS-PLC-01
				BL*/VC/PNV*
			UseEvents	False
			PollingCycle	5000
BakeOutControlDS/BL04-01	BakeOutControlDS	bl04/vc/elotech-01	TemperatureSetPoint	210.0
			ControllerType	elotech
			CommsDevice	/dev/ttyR15
			PressureSetPoint	7e-05
			PressureAttribute	BL04/VC/VGCT-01/P2
BakeOutControlDS/BL04-01	BakeOutControlDS	bl04/vc/elotech-02	TemperatureSetPoint	210.0
			ControllerType	elotech
			CommsDevice	/dev/ttyR14
			PressureSetPoint	7e-05
			PressureAttribute	BL04/VC/VGCT-01/P2
BakeOutControlDS/BL04-01	BakeOutControlDS	bl04/vc/elotech-03	TemperatureSetPoint	210.0
			ControllerType	elotech
			CommsDevice	/dev/ttyR13
			PressureSetPoint	7e-05
			PressureAttribute	BL04/VC/VGCT-01/P2
VacuumController/BL04_IPCT	VarianDUAL	bl04/vc/ipct-01	DefaultStatus	
			ForceStep	NO
			SerialLine	bl04/vc/serial-06
			ForceLocal	YES
			ForceProtect	NO
			Refresh	0.5
			StartSequence	#LOCAL/SERIAL, START/PROTECT, FIXED/STEP, ON1,ON2
VacuumController/BL04_IPCT	VarianDUAL	bl04/vc/ipct-02	DefaultStatus	
			ForceStep	NO
			SerialLine	bl04/vc/serial-07
			ForceLocal	YES
			ForceProtect	NO
			Refresh	0.5
			StartSequence	#LOCAL/SERIAL, START/PROTECT, FIXED/STEP, ON1,ON2
VacuumController/BL04_IPCT	VarianDUAL	bl04/vc/ipct-03	DefaultStatus	
			ForceStep	NO
			SerialLine	bl04/vc/serial-08
			ForceLocal	YES
			ForceProtect	NO
			Refresh	0.5
			StartSequence	#LOCAL/SERIAL, START/PROTECT, FIXED/STEP, ON1,ON2
VacuumController/BL04_IPCT	VarianDUAL	bl04/vc/ipct-04	DefaultStatus	
			ForceStep	NO
			SerialLine	bl04/vc/serial-09
			ForceLocal	YES
			ForceProtect	NO
			Refresh	0.5
			StartSequence	#LOCAL/SERIAL, START/PROTECT, FIXED/STEP, ON1,ON2
Serial/ibl0401	Serial	bl04/vc/serial-01	parity	even
			baudrate	9600
			SerialLine	/dev/ttyR0
			newline	13
			timeout	500
			stopbits	1
			charlength	8
Serial/ibl0401	Serial	bl04/vc/serial-02	parity	even
			baudrate	9600
			SerialLine	/dev/ttyR1
			newline	13
			timeout	500
			stopbits	1
			charlength	8
Serial/ibl0401	Serial	bl04/vc/serial-03	parity	even
			baudrate	9600
			SerialLine	/dev/ttyR2
			newline	13
			timeout	500
			stopbits	1
			charlength	8
Serial/ibl0401	Serial	bl04/vc/serial-04	parity	even
			baudrate	9600
			SerialLine	/dev/ttyR3
			newline	13
			timeout	500
			stopbits	1
			charlength	8
Serial/ibl0401	Serial	bl04/vc/serial-05	parity	
			baudrate	9600
			SerialLine	/dev/ttyR4
			newline	13
			timeout	500
			stopbits	1
			charlength	8
Serial/ibl0401	Serial	bl04/vc/serial-06	parity	
			baudrate	9600
			SerialLine	/dev/ttyR5
			newline	13
			timeout	500
			stopbits	1
			charlength	8
Serial/ibl0401	Serial	bl04/vc/serial-07	parity	
			baudrate	9600
			SerialLine	/dev/ttyR6
			newline	13
			timeout	500
			stopbits	1
			charlength	8
Serial/ibl0401	Serial	bl04/vc/serial-08	parity	
			baudrate	9600
			SerialLine	/dev/ttyR7
			newline	13
			timeout	500
			stopbits	1
			charlength	8
Serial/ibl0401	Serial	bl04/vc/serial-09	parity	
			baudrate	9600
			SerialLine	/dev/ttyR8
			newline	13
			timeout	500
			stopbits	1
			charlength	8
Serial/ibl0401	Serial	bl04/vc/serial-10	parity	even
			baudrate	9600
			SerialLine	/dev/ttyR9
			newline	13
			timeout	500
			stopbits	1
			charlength	8
Serial/ibl0401	Serial	bl04/vc/serial-11	parity	even
			baudrate	9600
			SerialLine	/dev/ttyR10
			newline	13
			timeout	500
			stopbits	1
			charlength	8
Serial/ibl0401	Serial	bl04/vc/serial-12	parity	even
			baudrate	9600
			SerialLine	/dev/ttyR11
			newline	13
			timeout	500
			stopbits	1
			charlength	8
VacuumController/BL04_VGCT	MKSGaugeController	bl04/vc/vgct-01	DefaultStatus	
			Protocol	232
			NChannels	5
			LogLevel	INFO
			Refresh	3.0
			SerialLine	BL04/VC/SERIAL-02
			NCombChannels	2
			StartSequence	#CC_On(CC1),CC_On(CC2),CC_On(ALL)
VacuumController/BL04_VGCT	MKSGaugeController	bl04/vc/vgct-02	DefaultStatus	
			Protocol	232
			NChannels	5
			LogLevel	INFO
			Refresh	3.0
			SerialLine	BL04/VC/SERIAL-03
			NCombChannels	2
			StartSequence	#CC_On(CC1),CC_On(CC2),CC_On(ALL)
VacuumController/BL04_VGCT	MKSGaugeController	bl04/vc/vgct-03	DefaultStatus	
			Protocol	232
			NChannels	5
			LogLevel	INFO
			Refresh	3.0
			SerialLine	BL04/VC/SERIAL-04
			NCombChannels	2
			StartSequence	#CC_On(CC1),CC_On(CC2),CC_On(ALL)
VacuumController/BL04_IPCT	VarianDUAL	fe04/vc/ipct-01	DefaultStatus	
			ForceStep	NO
			SerialLine	bl04/vc/serial-05
			ForceLocal	YES
			ForceProtect	NO
			Refresh	0.5
			StartSequence	#LOCAL/SERIAL, START/PROTECT, FIXED/STEP, ON1,ON2
VacuumController/BL04_VGCT	MKSGaugeController	fe04/vc/vgct-01	DefaultStatus	
			Protocol	232
			NChannels	5
			LogLevel	INFO
			Refresh	3.0
			SerialLine	BL04/VC/SERIAL-01
			NCombChannels	2
			StartSequence	#CC_On(CC1),CC_On(CC2),CC_On(ALL)
				
				
				
