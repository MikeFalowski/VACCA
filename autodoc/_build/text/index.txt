
Welcome to vacca's documentation!
*********************************

DESCRIPTION

VACCA is a versatile Control System Navigator tool built on top of the
Taurus framework. It was developed by Sergi Rubio (srubio@cells.es) as
the VACuum Control Application for ALBA Synchrotron.

http://www.tango-controls.org/Members/srubio/vacca

It provides:

   * Enhanced control system navigation, interactive browsing
     between synoptic, device tree, panels and device searching tools.

   * A customizable interface, allowing user groups to have
     different views and configure and save their own perspectives.

   * Control over tango devices and other tango services like
     Archiving, Astor/Starter or Tango DB properties.

   * Filters at Device/Attribute/Command level, to display only the
     devices/attributes users are interested in.

Since Vacca 2.0 the application is build on top of taurus-gui. Its
default setup includes 4 initial perspectives combining tree,
synoptic, device panel, attribute grids, taurus trends and some common
vacuum panels like pressure/temperature profiles.

LINKS / DEPENDENCIES

All dependencies and User Manual are available from www.tango-
controls.org:

Tango PyTango Taurus Fandango

INSTALLING:

Copy vacca folder to a folder in your PYTHONPATH Copy ./vaccagui
script to a folder in your PATH Copy default.py.ini to default.py and
edit your default options (follow comments in the file)

CONTENTS:

   * bin/vaccagui : a launcher script

   * vaccagui : an application definition for taurusgui

      * vaccagui.__init__ : it loads the contents of vacca.config
        module

      * vaccagui/default.ini : 4 perspectives by default (from
        showing all widgets to minimal for small screens)

   * vacca : the main module

CUSTOMIZING:

The idea is to have general config in default.py (ORGANIZATION_LOGO,
EXTRA_APPS, ...) and use another file to customize to your
beamline/system. Copy default.py to my_beamline.py; modify variables
like JDRAW_FILE, COMPOSER, GRID, DEVICE, GAUGES, ... Remove all
variables you don't need to modify (if ORGANIZATION_LOG is the same
for all do not have it declared in many files)

RUNNING:

Launch the gui as:
   ./vaccagui path/to/mybeamline.py

Path to your file must be absolute or relative from "vacca" module
location. If no config file is passed as argument the application will
try to open $TANGO_HOST.py if exists (lazy deployment).

======================================================================

Creating a new default.ini:

To create a new default file for QSettings you have to remember that
models must be clean up for Tree, Gauges and Profile widgets; if not
the default file will not behave properly.

Contents:

* Welcome to vacca's documentation!

* vacca package

  * Module contents

    * VACCA, the Viewer and Commander Control Application for TANGO

* vacca.config module

  * h2. Usage

    * h3. Contents

    * h3. Extending Taurus

    * h1. Config Variables

  * General Info Options

  * Installation Options

  * Sub systems Options

  * Device Tree Options

  * Synoptics Options

  * Device Panel Options

  * Plot Options

  * Widgets Options

* vacca.utils module

  * Classes

    * MyTaurusComponent

    * WidgetAcceptDrops

    * EventFilter

    * EventCounter

    * addCustomPanel2Gui

    * Draggable

    * OnChangeOrTimeEventFilter

    * DraggableLabel

  * Functions

    * get_shared_data_manager

    * get_solid_brush

    * get_shared_data_signals

    * wdir

    * vpath

    * get_White_palette

    * get_config_file

    * get_halfWhite_palette

    * get_fullWhite_palette

* vacca.setup module

  * Functions

    * reset_config

    * cleanup

    * main

    * check_package

    * update

    * check_repo

    * install

* vacca.doc module

  * Functions

    * get_autodoc

    * generate_rest_files

    * get_vars_docs

    * get_function_docs

    * get_class_docs

    * get_rest_title

* vacca.default module

* vacca.panel module

  * Classes

    * SimplePanel

    * DomainButton

    * VaccaDocker

    * VaccaSplash

    * VaccaPanel

    * VaccaFinder

    * VaccaAction

  * Functions

    * configure_form

    * get_dev_attrs

    * init_qt

    * get_eqtype

* vacca.plot module

  * Classes

    * PressureTrend

    * VaccaProfilePlot

  * Functions

    * pickPlotPoint

    * setup_profile_plot

    * setup_pressure_trend

* vacca.properties module

  * Classes

    * VaccaPropTable

* vacca.synoptics module

  * Classes

    * VaccaSynoptic

    * VaccaSynopticGraphicsFactory

    * VaccaGraphicsScene

  * Functions

    * GetClassWithExtensions

    * catched

* vacca.tree module

  * Classes

    * VaccaDevTree

    * VaccaTree

* vacca.alarms module

  * Classes

    * VaccaPanic

* vacca.grid module

  * Classes

    * VaccaVerticalGrid

    * VaccaGrid

  * Functions

    * get_vertical_grid

    * get_empty_grid

    * get_grid


Indices and tables
******************

* *Index*

* *Module Index*

* *Search Page*
